// lib/core/utils/dummy_data.dart

import '../../features/home/domain/entities/service_category.dart';
import '../../features/home/domain/entities/service.dart';
// Import the new provider entity
import '../../features/provider/domain/entities/service_provider.dart';
// ЁЯЖХ Import the provider application entity
import '../../../features/provider/domain/entities/provider_application.dart';
// ЁЯЖХ Import BookingEntity
import '../../features/booking/domain/entities/booking_entity.dart';

class DummyData {
  // ==============================
  // ЁЯЖХ Store for pending provider applications (Week 16)
  // ==============================
  static final List<ProviderApplication> _applications = [];

  /// ржЕрзНржпрж╛ржбржорж┐ржи рж░рж┐ржнрж┐ржЙрж░ ржЬржирзНржп ржирждрзБржи ржЕрзНржпрж╛ржкрзНрж▓рж┐ржХрзЗрж╢ржи ржпрзЛржЧ ржХрж░рж╛
  static void addProviderApplication(ProviderApplication application) {
    _applications.add(application);
    print(
        'DEBUG: New Provider Application Added: ${application.name} (Total: ${_applications.length})');
  }

  /// ржЕрзНржпрж╛ржбржорж┐ржи ржкрзНржпрж╛ржирзЗрж▓рзЗ ржЕржкрзЗржХрзНрж╖ржорж╛ржг ржЕрзНржпрж╛ржкрзНрж▓рж┐ржХрзЗрж╢ржи рждрж╛рж▓рж┐ржХрж╛
  static List<ProviderApplication> getPendingApplications() {
    return List.unmodifiable(_applications);
  }

  // ==============================
  // ЁЯЖХ Store for Bookings (Week 6 Foundation)
  // ==============================
  static final List<BookingEntity> _bookings = [];

  /// ржирждрзБржи ржмрзБржХрж┐ржВ ржпрзЛржЧ ржХрж░рж╛
  static void addBooking(BookingEntity booking) {
    _bookings.add(booking);
    print(
        'DEBUG: New Booking Added: ${booking.id} for Customer ${booking.customerId}');
  }

  /// ржХрж╛рж╕рзНржЯржорж╛рж░ ржЕржирзБржпрж╛рзЯрзА ржмрзБржХрж┐ржВ рждрж╛рж▓рж┐ржХрж╛
  static List<BookingEntity> getBookingsByCustomer(String customerId) {
    return _bookings.where((b) => b.customerId == customerId).toList();
  }

  /// ржкрзНрж░рзЛржнрж╛ржЗржбрж╛рж░ ржЕржирзБржпрж╛рзЯрзА ржмрзБржХрж┐ржВ рждрж╛рж▓рж┐ржХрж╛
  static List<BookingEntity> getBookingsByProvider(String providerId) {
    return _bookings.where((b) => b.providerId == providerId).toList();
  }

  // ==============================
  // Existing Service & Provider Data
  // ==============================

  // --- PRIVATE LIST: Single source of truth for all services ---
  static const List<Service> _allServices = [
    // Plumbing Services (3)
    Service(
        id: 'pipe-repair',
        categoryId: 'plumbing',
        name: 'ржкрж╛ржЗржк ржорзЗрж░рж╛ржоржд',
        description: 'рж▓рж┐ржХрж┐ржВ ржкрж╛ржЗржк ржлрж┐ржХрзНрж╕ ржХрж░рзБржи ржПржмржВ ржУржпрж╝рж╛ржЯрж╛рж░ржкрзНрж░рзБржлрж┐ржВ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рзБржиред',
        price: 500.0,
        providerName: 'рж░рж╣рж┐ржо ржЯрзЗржХржирж┐рж╢рж┐ржпрж╝рж╛ржи'),
    Service(
        id: 'drain-clean',
        categoryId: 'plumbing',
        name: 'ржбрзНрж░рзЗржи ржХрзНрж▓рж┐ржирж┐ржВ',
        description: 'ржмрзНрж▓ржХржб ржбрзНрж░рзЗржи ржкрж░рж┐рж╖рзНржХрж╛рж░ ржХрж░рзБржи, ржпржирзНрждрзНрж░рзЗрж░ ржорж╛ржзрзНржпржорзЗ ржжрзНрж░рзБржд рж╕ржорж╛ржзрж╛ржиред',
        price: 300.0,
        providerName: 'ржХрж░рж┐ржо ржкрзНрж▓рж╛ржорзНржмрж╛рж░'),
    Service(
        id: 'toilet-fix',
        categoryId: 'plumbing',
        name: 'ржЯржпрж╝рж▓рзЗржЯ ржлрж┐ржХрзНрж╕',
        description: 'ржЯржпрж╝рж▓рзЗржЯрзЗрж░ ржлрзНрж▓рж╛рж╢рж┐ржВ ржорзЗрж░рж╛ржоржд ржПржмржВ ржирждрзБржи ржкрж╛рж░рзНржЯрж╕ ржЗржирж╕рзНржЯрж▓рзЗрж╢ржиред',
        price: 450.0,
        providerName: 'рж╢ржлрж┐ржХ рж╕рж╛рж░рзНржнрж┐рж╕'),
    // Electrical Services (3)
    Service(
        id: 'wiring-fix',
        categoryId: 'electrical',
        name: 'ржУржпрж╝рзНржпрж╛рж░рж┐ржВ ржорзЗрж░рж╛ржоржд',
        description: 'ржмрж╛рж╕рж╛ ржмрж╛ ржЕржлрж┐рж╕рзЗрж░ ржУржпрж╝рзНржпрж╛рж░рж┐ржВ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржи, рж╢рж░рзНржЯ рж╕рж╛рж░рзНржХрж┐ржЯ ржлрж┐ржХрзНрж╕рж┐ржВред',
        price: 600.0,
        providerName: 'ржЖржорж╛ржи ржЗрж▓рзЗржХржЯрзНрж░рж┐ржХ'),
    Service(
        id: 'light-fix',
        categoryId: 'electrical',
        name: 'рж▓рж╛ржЗржЯ ржлрж┐ржХрзНрж╕ржЪрж╛рж░ ржЗржирж╕рзНржЯрж▓',
        description: 'рж▓рж╛ржЗржЯ, ржлрзНржпрж╛ржи, ржмрж╛ рж╕рзБржЗржЪ рж▓рж╛ржЧрж╛ржирзЛ ржПржмржВ ржорзЗрж░рж╛ржорждред',
        price: 200.0,
        providerName: 'ржмрж┐ржжрзНржпрзБрзО рж╕рзЗржмрж╛'),
    Service(
        id: 'circuit-break',
        categoryId: 'electrical',
        name: 'рж╕рж╛рж░рзНржХрж┐ржЯ ржмрзНрж░рзЗржХрж╛рж░ ржлрж┐ржХрзНрж╕',
        description: 'рждрзНрж░рзБржЯрж┐ржкрзВрж░рзНржг рж╕рж╛рж░рзНржХрж┐ржЯ ржмрзНрж░рзЗржХрж╛рж░ ржорзЗрж░рж╛ржоржд ржУ ржирждрзБржи ржЗржирж╕рзНржЯрж▓рзЗрж╢ржиред',
        price: 750.0,
        providerName: 'ржЗрж▓рзЗржХрзНржЯрзНрж░рзЛ рж╕рж▓рзНржпрзБрж╢ржи'),
    // Cleaning Services (3)
    Service(
        id: 'deep-clean',
        categoryId: 'cleaning',
        name: 'ржбрж┐ржк ржХрзНрж▓рж┐ржирж┐ржВ',
        description:
            'рж╕ржорзНржкрзВрж░рзНржг ржмрж╛рж╕рж╛рж░ ржЧржнрзАрж░ржнрж╛ржмрзЗ ржкрж░рж┐рж╖рзНржХрж╛рж░, ржХрж┐ржЪрзЗржи ржУ ржмрж╛ржерж░рзБржо ржмрж┐рж╢рзЗрж╖ ржпрждрзНржиред',
        price: 2500.0,
        providerName: 'рж╢рж╛ржЗржи ржХрзНрж▓рж┐ржирж╛рж░рзНрж╕'),
    Service(
        id: 'carpet-clean',
        categoryId: 'cleaning',
        name: 'ржХрж╛рж░рзНржкрзЗржЯ ржХрзНрж▓рж┐ржирж┐ржВ',
        description: 'ржкрзЗрж╢рж╛ржжрж╛рж░ ржХрж╛рж░рзНржкрзЗржЯ ржзрзЛржпрж╝рж╛ ржПржмржВ рж╕рзНржЯрзАржо ржХрзНрж▓рж┐ржирж┐ржВ рж╕рж╛рж░рзНржнрж┐рж╕ред',
        price: 800.0,
        providerName: 'ржХрзНрж▓рж┐ржи ржЕрзНржпрж╛ржирзНржб ржХрзЗрзЯрж╛рж░'),
    Service(
        id: 'sofa-clean',
        categoryId: 'cleaning',
        name: 'рж╕рзЛржлрж╛ ржХрзНрж▓рж┐ржирж┐ржВ',
        description: 'рж╕рзЛржлрж╛ ржУ ржЖрж╕ржмрж╛ржмржкрждрзНрж░ ржкрж░рж┐рж╖рзНржХрж╛рж░, ржлрзЗржмрзНрж░рж┐ржХ ржУ рж▓рзЗржжрж╛рж░ ржпрждрзНржирзЗрж░ рж╕рж╛рж░рзНржнрж┐рж╕ред',
        price: 1000.0,
        providerName: 'ржлрж╛рж░рзНржирж┐ржЪрж╛рж░ рж╢рж╛ржЗржи'),
    // Painting Services (3)
    Service(
        id: 'wall-paint',
        categoryId: 'painting',
        name: 'ржжрзЗржпрж╝рж╛рж▓ ржкрзЗржЗржирзНржЯрж┐ржВ',
        description: 'рж░ржВ ржХрж░рж╛ ржУ ржлрж┐ржирж┐рж╢рж┐ржВ, ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо ржХрзЛржпрж╝рж╛рж▓рж┐ржЯрж┐рж░ рж░ржВ ржмрзНржпржмрж╣рж╛рж░ред',
        price: 800.0,
        providerName: 'ржкрзЗржЗржирзНржЯ ржорж╛рж╖рзНржЯрж╛рж░'),
    Service(
        id: 'wood-polish',
        categoryId: 'painting',
        name: 'ржХрж╛ржарзЗрж░ ржкрж▓рж┐рж╢',
        description: 'ржХрж╛ржарзЗрж░ ржЖрж╕ржмрж╛ржмрзЗ ржмрж╛рж░рзНржирж┐рж╢ ржУ ржкрж▓рж┐рж╢, ржжрзАрж░рзНржШрж╕рзНржерж╛ржпрж╝рзА ржЧрзНрж▓рж╕ред',
        price: 950.0,
        providerName: 'ржЧрзНрж▓рзЛрж░рж┐ ржкрзЗржЗржирзНржЯ'),
    Service(
        id: 'texture-paint',
        categoryId: 'painting',
        name: 'ржЯрзЗржХрзНрж╕ржЪрж╛рж░ ржкрзЗржЗржирзНржЯ',
        description: 'ржЖржзрзБржирж┐ржХ ржЯрзЗржХрзНрж╕ржЪрж╛рж░ ржкрзЗржЗржирзНржЯрж┐ржВ, ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ ржбрж┐ржЬрж╛ржЗржирж╛рж░рзЗрж░ ржкрж░рж╛ржорж░рзНрж╢ред',
        price: 1500.0,
        providerName: 'ржЖрж░рзНржЯ рж╣рзЛржо'),
    // Movers & Emergency
    Service(
        id: 'home-move',
        categoryId: 'movers',
        name: 'ржмрж╛рж╕рж╛ ржмржжрж▓',
        description: 'рж╕ржорзНржкрзВрж░рзНржг ржмрж╛рж╕рж╛ рж╕рзНржерж╛ржирж╛ржирзНрждрж░рзЗрж░ рж╕рзЗржмрж╛',
        price: 8000.0,
        providerName: 'ржорзБржнрж╛рж░рзНрж╕ ржмрж┐ржбрж┐'),
    Service(
        id: 'ambulance',
        categoryId: 'emergency',
        name: 'ржЕрзНржпрж╛ржорзНржмрзБрж▓рзЗржирзНрж╕',
        description: 'ржЬрж░рзБрж░рзА ржЪрж┐ржХрж┐рждрзНрж╕рж╛ рж╕рзЗржмрж╛',
        price: 1000.0,
        providerName: 'ржЗржорж╛рж░рзНржЬрзЗржирзНрж╕рж┐ рж░рзЗрж╕ржкржирзНрж╕'),
  ];

  // --- Existing getServiceCategories (No change needed) ---
  static List<ServiceCategory> getServiceCategories() {
    return const [
      ServiceCategory(
          id: 'plumbing',
          name: 'ржкрзНрж▓рж╛ржорзНржмрж┐ржВ',
          iconPath: 'assets/icons/plumbing.png',
          description: 'ржкрж╛ржЗржк рж▓рж┐ржХ, ржбрзНрж░рзЗржи ржмрзНрж▓ржХ ржЗрждрзНржпрж╛ржжрж┐'),
      ServiceCategory(
          id: 'electrical',
          name: 'ржмрж┐ржжрзНржпрзБрзО',
          iconPath: 'assets/icons/electrical.png',
          description: 'ржУржпрж╝рзНржпрж╛рж░рж┐ржВ, рж▓рж╛ржЗржЯ ржлрж┐ржХрзНрж╕ржЪрж╛рж░ ржЗрждрзНржпрж╛ржжрж┐'),
      ServiceCategory(
          id: 'cleaning',
          name: 'ржкрж░рж┐рж╖рзНржХрж╛рж░-ржкрж░рж┐ржЪрзНржЫржирзНржирждрж╛',
          iconPath: 'assets/icons/cleaning.png',
          description: 'ржмрж╛рж╕рж╛, ржЕржлрж┐рж╕, ржЧрж╛ржбрж╝рж┐ ржкрж░рж┐рж╖рзНржХрж╛рж░'),
      ServiceCategory(
          id: 'painting',
          name: 'ржкрзЗржЗржирзНржЯрж┐ржВ',
          iconPath: 'assets/icons/painting.png',
          description: 'ржмрж╛рж╕рж╛ ржмрж╛ ржЕржлрж┐рж╕рзЗрж░ ржжрзЗржпрж╝рж╛рж▓ ржкрзЗржЗржирзНржЯрж┐ржВ'),
      ServiceCategory(
          id: 'carpentry',
          name: 'ржХрж╛ржарзЗрж░ ржХрж╛ржЬ',
          iconPath: 'assets/icons/carpentry.png',
          description: 'ржлрж╛рж░рзНржирж┐ржЪрж╛рж░ рждрзИрж░рж┐ ржУ ржорзЗрж░рж╛ржоржд'),
      ServiceCategory(
          id: 'ac_repair',
          name: 'ржПрж╕рж┐ ржорзЗрж░рж╛ржоржд',
          iconPath: 'assets/icons/ac_repair.png',
          description: 'ржПрж╕рж┐ ржЗржирж╕рзНржЯрж▓рзЗрж╢ржи ржУ ржорзЗрж░рж╛ржоржд'),
      ServiceCategory(
          id: 'appliances',
          name: 'ржЕрзНржпрж╛ржкрзНрж▓рж╛ржпрж╝рзЗржирзНрж╕ ржорзЗрж░рж╛ржоржд',
          iconPath: 'assets/icons/appliances.png',
          description: 'ржлрзНрж░рж┐ржЬ, ржЯрж┐ржнрж┐, ржУржпрж╝рж╛рж╢рж┐ржВ ржорзЗрж╢рж┐ржи ржорзЗрж░рж╛ржоржд'),
      ServiceCategory(
          id: 'pest_control',
          name: 'ржкрзЛржХрж╛ржорж╛ржХржбрж╝ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг',
          iconPath: 'assets/icons/pest_control.png',
          description: 'рждрзЗрж▓рж╛ржкрзЛржХрж╛, ржЗржБржжрзБрж░, ржкрж┐ржБржкржбрж╝рж╛ ржжржоржи'),
      ServiceCategory(
          id: 'laundry',
          name: 'рж▓ржирзНржбрзНрж░рж┐ ржУ ржбрзНрж░рж╛ржЗ ржХрзНрж▓рж┐ржирж┐ржВ',
          iconPath: 'assets/icons/laundry.png',
          description: 'ржХрж╛ржкржбрж╝ ржзрзЛржпрж╝рж╛ ржУ ржЗрж╕рзНрждрзНрж░рж┐'),
      ServiceCategory(
          id: 'beauty',
          name: 'рж╕рзМржирзНржжрж░рзНржп рж╕рзЗржмрж╛',
          iconPath: 'assets/icons/beauty.png',
          description: 'ржШрж░рзЗ ржмрж╕рзЗ рж░рзВржкржЪрж░рзНржЪрж╛'),
      ServiceCategory(
          id: 'car_wash',
          name: 'ржЧрж╛ржбрж╝рж┐ ржзрзЛржпрж╝рж╛',
          iconPath: 'assets/icons/car_wash.png',
          description: 'ржмрж╛рж╕рж╛ ржмрж╛ ржЕржлрж┐рж╕рзЗрж░ рж╕рж╛ржоржирзЗ ржЧрж╛ржбрж╝рж┐ ржзрзЛржпрж╝рж╛'),
      ServiceCategory(
          id: 'gardening',
          name: 'ржмрж╛ржЧрж╛ржи ржХрж░рж╛',
          iconPath: 'assets/icons/gardening.png',
          description: 'ржЯржмрзЗ ржЧрж╛ржЫ рж▓рж╛ржЧрж╛ржирзЛ ржУ ржкрж░рж┐ржЪрж░рзНржпрж╛'),
      ServiceCategory(
          id: 'photography',
          name: 'ржлржЯрзЛржЧрзНрж░рж╛ржлрж┐',
          iconPath: 'assets/icons/photography.png',
          description: 'ржЕржирзБрж╖рзНржарж╛ржи ржмрж╛ ржЗржнрзЗржирзНржЯрзЗрж░ ржЬржирзНржп ржлржЯрзЛржЧрзНрж░рж╛ржлрж╛рж░'),
      ServiceCategory(
          id: 'movers',
          name: 'ржмрж╛рж╕рж╛ ржмржжрж▓',
          iconPath: 'assets/icons/movers.png',
          description: 'ржмрж╛рж╕рж╛ ржмрж╛ ржЕржлрж┐рж╕рзЗрж░ ржЬрж┐ржирж┐рж╕ржкрждрзНрж░ рж╕рзНржерж╛ржирж╛ржирзНрждрж░рзЗрж░ рж╕рзЗржмрж╛'),
      ServiceCategory(
          id: 'emergency',
          name: 'ржЬрж░рзБрж░рзА рж╕рзЗржмрж╛',
          iconPath: 'assets/icons/emergency.png',
          description: 'ржЕрзНржпрж╛ржорзНржмрзБрж▓рзЗржирзНрж╕, ржлрж╛ржпрж╝рж╛рж░ рж╕рж╛рж░рзНржнрж┐рж╕ ржЗрждрзНржпрж╛ржжрж┐'),
    ];
  }

  // --- Existing getServices ---
  static List<Service> getServices(String categoryId) {
    if (categoryId.isEmpty) {
      return _allServices;
    }
    return _allServices
        .where((service) => service.categoryId == categoryId)
        .toList();
  }

  // --- Existing getServiceById ---
  static Service getServiceById(String serviceId) {
    return _allServices.firstWhere(
      (s) => s.id == serviceId,
      orElse: () => const Service(
        id: 'error',
        categoryId: '',
        name: 'рж╕рзЗржмрж╛ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐',
        description:
            'ржЕржирзБрж░рзЛржз ржХрж░рж╛ рж╕рзЗржмрж╛ржЯрж┐ ржмрж░рзНрждржорж╛ржирзЗ ржкрж╛ржУрзЯрж╛ ржпрж╛ржЪрзНржЫрзЗ ржирж╛ред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ рж╕рж╛рж░рзНржнрж┐рж╕ рж▓рж┐рж╕рзНржЯрзЗ ржлрж┐рж░рзЗ ржпрж╛ржиред',
        price: 0,
        providerName: 'N/A',
      ),
    );
  }

  // --- NEW FIX: Dedicated method to find a single provider by ID ---
  static ServiceProvider getProviderById(String providerId) {
    return getProviders().firstWhere(
      (p) => p.id == providerId,
      orElse: () => const ServiceProvider(
        id: 'error',
        name: 'ржкрзНрж░рзЛржнрж╛ржЗржбрж╛рж░ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐',
        rating: 0.0,
        isVerified: false,
        services: [],
        description: 'ржЕржирзБрж░рзЛржз ржХрж░рж╛ ржкрзНрж░рзЛржнрж╛ржЗржбрж╛рж░ржХрзЗ ржЦрзБржБржЬрзЗ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред',
      ),
    );
  }

  // --- NEW METHOD: List of Service Providers ---
  static List<ServiceProvider> getProviders() {
    return const [
      ServiceProvider(
        id: 'provider1',
        name: 'рж░рж╣рж┐ржо ржЯрзЗржХржирж┐рж╢рж┐ржпрж╝рж╛ржи',
        rating: 4.5,
        isVerified: true,
        services: ['pipe-repair', 'drain-clean', 'toilet-fix'], // Plumbing
        description: 'ржкрж╛ржБржЪ ржмржЫрж░рзЗрж░ ржЕржнрж┐ржЬрзНржЮрждрж╛рж╕ржорзНржкржирзНржи ржжржХрзНрж╖ ржкрзНрж▓рж╛ржорзНржмрж╛рж░ред ржжрзНрж░рзБржд ржУ ржирж┐рж░рзНржнрж░ржпрзЛржЧрзНржп рж╕рзЗржмрж╛ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рж┐ред',
      ),
      ServiceProvider(
        id: 'provider2',
        name: 'ржЖржорж╛ржи ржЗрж▓рзЗржХржЯрзНрж░рж┐ржХ',
        rating: 4.0,
        isVerified: false,
        services: ['wiring-fix', 'light-fix', 'circuit-break'], // Electrical
        description: 'ржмрж┐ржжрзНржпрзБрзО ржмрж┐рж╢рзЗрж╖ржЬрзНржЮред ржмрж╛рж╕рж╛ ржмрж╛ ржЕржлрж┐рж╕рзЗрж░ ржпрзЗржХрзЛржирзЛ ржЬржЯрж┐рж▓ ржУржпрж╝рзНржпрж╛рж░рж┐ржВ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржирзЗ рж╕ржХрзНрж╖ржоред',
      ),
      ServiceProvider(
        id: 'provider3',
        name: 'рж╢рж╛ржЗржи ржХрзНрж▓рж┐ржирж╛рж░рзНрж╕',
        rating: 4.8,
        isVerified: true,
        services: ['deep-clean', 'carpet-clean'], // Cleaning
        description: 'ржЖржорж░рж╛ ржЖржкржирж╛рж░ ржмрж╛рж╕рж╛ ржмрж╛ ржЕржлрж┐рж╕ржХрзЗ ржЬрзАржмрж╛ржгрзБржорзБржХрзНржд ржХрж░рзЗ ржЧржнрзАрж░ржнрж╛ржмрзЗ ржкрж░рж┐рж╖рзНржХрж╛рж░ ржХрж░рж┐ред',
      ),
      ServiceProvider(
        id: 'provider4',
        name: 'ржкрзЗржЗржирзНржЯ ржорж╛рж╖рзНржЯрж╛рж░',
        rating: 3.9,
        isVerified: true,
        services: ['wall-paint', 'texture-paint'], // Painting
        description: 'ржкрзЗрж╢рж╛ржжрж╛рж░ ржкрзЗржЗржирзНржЯрж┐ржВ рж╕рж╛рж░рзНржнрж┐рж╕ред ржЖржкржирж╛рж░ ржжрзЗржпрж╝рж╛рж▓ржХрзЗ ржирждрзБржи ржЬрзАржмржи ржжрж┐ржиред',
      ),
      ServiceProvider(
        id: 'provider5',
        name: 'ржХрзБрж▓ ржЯрзЗржХ',
        rating: 4.2,
        isVerified: false,
        services: ['ac-install', 'ac-service', 'gas-refill'], // AC Repair
        description: 'рж╕ржм ржзрж░ржирзЗрж░ ржПрж╕рж┐ ржЗржирж╕рзНржЯрж▓рзЗрж╢ржи, рж╕рж╛рж░рзНржнрж┐рж╕рж┐ржВ ржПржмржВ ржжрзНрж░рзБржд ржорзЗрж░рж╛ржорждрзЗрж░ ржЬржирзНржп ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржиред',
      ),
    ];
  }
}
